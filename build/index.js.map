{"version":3,"file":"index.js","sources":["../source/index.ts"],"sourcesContent":["import { createServer, Server, IncomingMessage, ServerResponse } from 'http';\nimport vamtigerRequire, { Params as RequireParams } from 'vamtiger-require';\nimport { ReferenceObjectPath } from 'vamtiger-reference-object-path';\nimport Argv = require('vamtiger-argv');\n\nexport interface Params {\n    port: string | number;\n}\n\nexport interface GetBodyParams {\n    request: IncomingMessage\n}\n\nexport interface Body extends RequireParams {\n    callback?: boolean;\n    instanceGetPath?: string;\n}\n\nexport enum Event {\n    data = 'data',\n    end = 'end'\n}\n\nexport enum HeaderKey {\n    contentType = 'Content-Type'\n}\n\nexport enum HeaderValue {\n    json = 'application/json'\n}\n\nexport enum CommandlineArgs {\n    port = 'port'\n}\n\nexport type VamtigerDebugServer = typeof vamtigerDebugServer;\n\nconst Args = require('vamtiger-argv') as typeof Argv;\nconst referenceObjectPath = require('vamtiger-reference-object-path') as ReferenceObjectPath;\nconst args = new Args();\nconst defaults = {\n    port: 8888\n}\n\nconst port = args.has(CommandlineArgs.port) && args.get(CommandlineArgs.port) || defaults.port;\n\nif (port)\n    vamtigerDebugServer({ port });\n\nlet server: Server;\n\nexport default function vamtigerDebugServer({ port }: Params) {\n    server = !server ? createServer(handleRequest) : server;\n\n    server.listen(port);\n\n    return server;\n}\n\nexport function stopServer() {\n    server.close();\n}\n\nasync function handleRequest(request: IncomingMessage, response: ServerResponse) {\n    const body = await getBody({ request });\n    const callback = (error: Error, result: any) => response.end(JSON.stringify({ error, result }));\n\n    let result;\n\n    response.setHeader(HeaderKey.contentType, HeaderValue.json);\n\n    try {\n        if (body.callback) {\n            body.arguments && body.arguments.push(callback);\n            body.instanceArguments && body.instanceArguments.push(callback);\n\n            result = vamtigerRequire(body);\n        } else {\n            result = vamtigerRequire(body);\n\n            if (body.instanceGetPath)\n                result = referenceObjectPath({\n                    object: result,\n                    path: body.instanceGetPath\n                });\n\n            response.end(JSON.stringify({ result }));\n        }\n    } catch(error){\n        console.error(error);\n\n        response.end(JSON.stringify({ error }));\n    };\n}\n\nfunction getBody({ request }: GetBodyParams): Promise<Body> {\n    const body = [] as Uint8Array[];\n\n    return new Promise(resolve => {\n        request.on(\n            Event.data,\n            chuck => body.push(chuck)\n        );\n        request.on(\n            Event.end,\n            () => Promise\n                .resolve(Buffer.concat(body).toString())\n                .then(JSON.parse)\n                .then(resolve)\n        )\n    })\n}"],"names":["Event","HeaderKey","HeaderValue","CommandlineArgs","Args","require","referenceObjectPath","args","defaults","port","has","get","server","vamtigerDebugServer","createServer","handleRequest","listen","stopServer","close","request","response","body","getBody","callback","error","result","end","JSON","stringify","setHeader","contentType","json","arguments","push","instanceArguments","vamtigerRequire","instanceGetPath","object","path","console","Promise","resolve","on","data","chuck","Buffer","concat","toString","then","parse"],"mappings":"ufAkBA,SAAYA,GACRA,cACAA,YAFJ,CAAYA,gBAAAA,oBAKAC,oBAAAA,mDAIAC,sBAAAA,kDAIAC,0BAAAA,yCAMZ,MAAMC,KAAOC,QAAQ,iBACfC,oBAAsBD,QAAQ,kCAC9BE,KAAO,IAAIH,KACXI,UACFC,KAAM,MAGJA,KAAOF,KAAKG,IAAIP,wBAAgBM,OAASF,KAAKI,IAAIR,wBAAgBM,OAASD,SAASC,KAK1F,IAAIG,OAEJ,SAAwBC,qBAAoBJ,KAAEA,IAK1C,OAJAG,OAAUA,QAASE,kBAAaC,gBAEzBC,OAAOP,GAEPG,OAGX,SAAgBK,aACZL,OAAOM,QAGX,SAAeH,cAAcI,EAA0BC,mDACnD,MAAMC,QAAaC,SAAUH,QAAAA,IACvBI,EAAW,CAACC,EAAcC,IAAgBL,EAASM,IAAIC,KAAKC,WAAYJ,MAAAA,EAAOC,OAAAA,KAErF,IAAIA,EAEJL,EAASS,UAAU5B,kBAAU6B,YAAa5B,oBAAY6B,MAEtD,IACQV,EAAKE,UACLF,EAAKW,WAAaX,EAAKW,UAAUC,KAAKV,GACtCF,EAAKa,mBAAqBb,EAAKa,kBAAkBD,KAAKV,GAEtDE,EAASU,gBAAgBd,KAEzBI,EAASU,gBAAgBd,GAErBA,EAAKe,kBACLX,EAASnB,qBACL+B,OAAQZ,EACRa,KAAMjB,EAAKe,mBAGnBhB,EAASM,IAAIC,KAAKC,WAAYH,OAAAA,MAEpC,MAAMD,GACJe,QAAQf,MAAMA,GAEdJ,EAASM,IAAIC,KAAKC,WAAYJ,MAAAA,QAItC,SAASF,SAAQH,QAAEA,IACf,MAAME,KAEN,OAAO,IAAImB,QAAQC,IACftB,EAAQuB,GACJ1C,cAAM2C,KACNC,GAASvB,EAAKY,KAAKW,IAEvBzB,EAAQuB,GACJ1C,cAAM0B,IACN,IAAMc,QACDC,QAAQI,OAAOC,OAAOzB,GAAM0B,YAC5BC,KAAKrB,KAAKsB,OACVD,KAAKP,MA9DlBhC,MACAI,qBAAsBJ,KAAAA"}